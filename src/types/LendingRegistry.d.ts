/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LendingRegistryInterface extends ethers.utils.Interface {
  functions: {
    "approveAgreement(address,address,address,uint256)": FunctionFragment;
    "cancelAgreement(address,address,address,uint256)": FunctionFragment;
    "concludeAgreement(address,address,address,uint256)": FunctionFragment;
    "getAgreement(address,address,address,uint256)": FunctionFragment;
    "proposeAgreement(address,address,address,uint256,uint256)": FunctionFragment;
    "refuseAgreement(address,address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "approveAgreement",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelAgreement",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "concludeAgreement",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAgreement",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposeAgreement",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "refuseAgreement",
    values: [string, string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "approveAgreement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelAgreement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "concludeAgreement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAgreement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposeAgreement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "refuseAgreement",
    data: BytesLike
  ): Result;

  events: {};
}

export class LendingRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LendingRegistryInterface;

  functions: {
    approveAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approveAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    cancelAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancelAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    concludeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "concludeAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
      1: BigNumber;
    }>;

    "getAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
      1: BigNumber;
    }>;

    proposeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "proposeAgreement(address,address,address,uint256,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    refuseAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "refuseAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  approveAgreement(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approveAgreement(address,address,address,uint256)"(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  cancelAgreement(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancelAgreement(address,address,address,uint256)"(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  concludeAgreement(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "concludeAgreement(address,address,address,uint256)"(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getAgreement(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: number;
    1: BigNumber;
  }>;

  "getAgreement(address,address,address,uint256)"(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: number;
    1: BigNumber;
  }>;

  proposeAgreement(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    _endDate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "proposeAgreement(address,address,address,uint256,uint256)"(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    _endDate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  refuseAgreement(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "refuseAgreement(address,address,address,uint256)"(
    _lender: string,
    _borrower: string,
    _nft: string,
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    approveAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "approveAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    concludeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "concludeAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
      1: BigNumber;
    }>;

    "getAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
      1: BigNumber;
    }>;

    proposeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "proposeAgreement(address,address,address,uint256,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    refuseAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "refuseAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    approveAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approveAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    cancelAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "cancelAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    concludeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "concludeAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "proposeAgreement(address,address,address,uint256,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    refuseAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "refuseAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    approveAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approveAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    cancelAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancelAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    concludeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "concludeAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proposeAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "proposeAgreement(address,address,address,uint256,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      _endDate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    refuseAgreement(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "refuseAgreement(address,address,address,uint256)"(
      _lender: string,
      _borrower: string,
      _nft: string,
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
